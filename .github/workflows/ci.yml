name: Python package

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      id: cache-pip
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

    - name: Install dependencies
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade --upgrade-strategy eager -r requirements.txt

    - name: Test
      run: |
        export NEPTUNE_API_TOKEN=${{ secrets.NEPTUNE_API_TOKEN }}
        mamba --enable-coverage

    - name: Generate coverage report
      run: coverage xml

    - name: Python Cov
      uses: orgoro/coverage/@v2
      if: github.event_name == 'pull_request' # Only run on PRs
      with:
        coverageFile: coverage.xml
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install coverage lcov
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        pip install coverage-lcov
        pip install coverage==6.1.2 # Added because coverage==5.5 has a bug with coverage-lcov

    - name: Run coverage lcov
      run:
        coverage-lcov --output_file_path ./lcov.info

    - name: Coveralls GitHub Action
      # You may pin to the exact commit or the version.
      uses: coverallsapp/github-action@v1.1.2
      #uses: coverallsapp/github-action@1.1.3
      with:
        #
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Path to lcov file
        path-to-lcov: ./lcov.info # default is ./coverage/lcov.info
        # Job flag name, e.g. "Unit", "Functional", or "Integration". Will be shown in the Coveralls UI.
       # flag-name: # optional
        # Set to true if you are running parallel jobs, then use "parallel_finished: true" for the last action.
       # parallel: # optional
        # Set to true for the last action when using "parallel: true".
       # parallel-finished: # optional
        # Coveralls Enterprise server (more info: https://enterprise.coveralls.io)
       # coveralls-endpoint: # optional, default is https://coveralls.io
        # The root folder of the project that originally ran the tests
      #  base-path: # optional
        # Override the branch name
      #  git-branch: # optional
        # Override the commit sha
        #git-commit: # optional
  check-code-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Black Check
        # You may pin to the exact commit or the version.
        # uses: jpetrucciani/black-check@f5c6876aea54003a0db0eb85fa56cc2826aef135
        uses: jpetrucciani/black-check@21.12b0
        with:
          # File or directory to run black on
          path: "src spec" # optional, default is .
          # Optional Black flags (refer to `black --help`)
          #black_flags: # optional, default is

